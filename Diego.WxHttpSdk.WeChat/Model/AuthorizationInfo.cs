///////////////////////////////////////////////////////////
//  AuthorizationInfo.cs
//  Implementation of the Class AuthorizationInfo
//  Generated by Enterprise Architect
//  Created on:      09-12月-2017 11:44:03
//  Original author: Huachao
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Diego.WxHttpSdk.Command;
using System.Text.RegularExpressions;

namespace Diego.WxHttpSdk
{
    /// <summary>
    /// 微信授权信息
    /// 用来存储微信登陆成功后的结果
    /// </summary>
    public class AuthorizationInfo
    {
        #region MathResultRegStr
        /// <summary>
        /// 用来匹配是否发生异常
        /// </summary>
        public const string RetMatchStr = "<ret>([\\d]+)</ret>";
        /// <summary>
        /// 用来匹配skey
        /// </summary>
        public const string SkeyMatchStr = "<skey>([\\s\\S]+)</skey>";
        /// <summary>
        /// 用来匹配wxsid
        /// </summary>
        public const string WxsidMatchStr = "<wxsid>([\\s\\S]+)</wxsid>";
        /// <summary>
        /// 用来匹配Wxuin
        /// </summary>
        public const string WxuinMatchStr = "<wxuin>([\\s\\S]+)</wxuin>";
        /// <summary>
        /// 用来匹配是否发生异常
        /// </summary>
        public const string PassticketMatchStr = "<pass_ticket>([\\s\\S]+)</pass_ticket>";
        #endregion

        private HttpWeChat m_httpWeChat { get; }
        public AuthorizationInfo(HttpWeChat httpWeChat)
        {
            m_httpWeChat = httpWeChat;
        }

        private string _pass_ticket;
        private string _sid;
        private string _skey;
        private long _uin;

        public string Pass_ticket
        {
            get
            {
                return _pass_ticket;
            }
            set
            {
                _pass_ticket = value;
            }
        }

        public string Sid
        {
            get
            {
                return _sid;
            }
            set
            {
                _sid = value;
            }
        }

        public string Skey
        {
            get
            {
                return _skey;
            }
            set
            {
                _skey = value;
            }
        }

        public long Uin
        {
            get
            {
                return _uin;
            }
            set
            {
                _uin = value;
            }
        }


        public void Init(string ticket, string uuid, string lang, string scan)
        {
            StringBuilder stringBuilder = new StringBuilder(WeChatHttpProUrl.GetAuthorizationUrl);
            stringBuilder.Append($"ticket={ticket}&");
            stringBuilder.Append($"uuid={uuid}&");
            stringBuilder.Append($"lang={lang}&");
            stringBuilder.Append($"scan={scan}&");
            stringBuilder.Append($"fun=new&");
            stringBuilder.Append($"version=v2&");
            stringBuilder.Append($"lang={lang}");
            string result = m_httpWeChat.HttpClient.GetStringAsync(stringBuilder.ToString()).Result;
            if (!Regex.IsMatch(result, RetMatchStr) || Regex.Match(result, RetMatchStr).Groups[1].Value != "0")
            {
                throw new Exceptions.AnalyzeLoginParameterException(result,null);
            }
            this.Pass_ticket = Regex.Match(result, PassticketMatchStr).Groups[1].Value;
            this.Sid = Regex.Match(result, WxsidMatchStr).Groups[1].Value;
            this.Skey = Regex.Match(result, SkeyMatchStr).Groups[1].Value;
            this.Uin =Convert.ToInt64(Regex.Match(result, WxuinMatchStr).Groups[1].Value);
        }

    }//end AuthorizationInfo

}//end namespace Sdk